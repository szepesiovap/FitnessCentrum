package sk.upjs.ics.paz1c.fitnesscentrum.form;

import javax.swing.JOptionPane;
import sk.upjs.ics.paz1c.fitnesscentrum.DaoFactory;
import sk.upjs.ics.paz1c.fitnesscentrum.RezervaciaTableModel;
import sk.upjs.ics.paz1c.fitnesscentrum.SpinningComboBoxModel;
import sk.upjs.ics.paz1c.fitnesscentrum.dao.RezervaciaDao;
import sk.upjs.ics.paz1c.fitnesscentrum.entity.Rezervacia;
import sk.upjs.ics.paz1c.fitnesscentrum.entity.Spinning;

public class SpinningForm extends javax.swing.JDialog {

    private static final int ID_COLUMN = 2;
    private final RezervaciaDao rezervaciaDao = DaoFactory.INSTANCE.getRezervaciaDao();
    private Rezervacia rezervacia;
    /**
     * Creates new form SpinningForm
     */
    public SpinningForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        zobrazRezervacie();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rezervacieScrollPane = new javax.swing.JScrollPane();
        rezervacieTable = new javax.swing.JTable();
        spinningComboBox = new javax.swing.JComboBox<>();
        spinningLabel = new javax.swing.JLabel();
        spinningMenuBar = new javax.swing.JMenuBar();
        rezervujMenu = new javax.swing.JMenu();
        jednorazovyMenuItem = new javax.swing.JMenuItem();
        kartouMenuItem = new javax.swing.JMenuItem();
        pridajSpinningMenu = new javax.swing.JMenu();
        pridajInstruktoraMenu = new javax.swing.JMenu();
        odhlasZoSpinninguMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rezervácie na spinning");

        rezervacieTable.setModel(new RezervaciaTableModel(null));
        rezervacieScrollPane.setViewportView(rezervacieTable);

        spinningComboBox.setModel(new SpinningComboBoxModel());
        spinningComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spinningComboBoxActionPerformed(evt);
            }
        });

        spinningLabel.setText("Spinning : ");

        rezervujMenu.setText("Rezervuj");

        jednorazovyMenuItem.setText("Jednorázový");
        jednorazovyMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jednorazovyMenuItemMousePressed(evt);
            }
        });
        rezervujMenu.add(jednorazovyMenuItem);

        kartouMenuItem.setText("Kartou");
        kartouMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kartouMenuItemMousePressed(evt);
            }
        });
        rezervujMenu.add(kartouMenuItem);

        spinningMenuBar.add(rezervujMenu);

        pridajSpinningMenu.setText("Pridaj spinning");
        pridajSpinningMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pridajSpinningMenuMousePressed(evt);
            }
        });
        spinningMenuBar.add(pridajSpinningMenu);

        pridajInstruktoraMenu.setText("Pridaj inštruktora");
        pridajInstruktoraMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pridajInstruktoraMenuMousePressed(evt);
            }
        });
        spinningMenuBar.add(pridajInstruktoraMenu);

        odhlasZoSpinninguMenu.setText("Odhlas zo spinningu");
        odhlasZoSpinninguMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                odhlasZoSpinninguMenuMousePressed(evt);
            }
        });
        spinningMenuBar.add(odhlasZoSpinninguMenu);

        setJMenuBar(spinningMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rezervacieScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spinningLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinningComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinningComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinningLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rezervacieScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pridajSpinningMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pridajSpinningMenuMousePressed
        new PridajSpinningForm(this, true).setVisible(true);
        ((SpinningComboBoxModel) spinningComboBox.getModel()).aktualizuj();
    }//GEN-LAST:event_pridajSpinningMenuMousePressed

    private void pridajInstruktoraMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pridajInstruktoraMenuMousePressed
        new PridajInstruktoraForm(this, true).setVisible(true);
    }//GEN-LAST:event_pridajInstruktoraMenuMousePressed

    private void kartouMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kartouMenuItemMousePressed
        try {
            Spinning spinning = (Spinning) spinningComboBox.getSelectedItem();
            if (spinning.getVolne() > 0) {
                new RezervaciaKartouForm(this, true, spinning).setVisible(true);
                zobrazRezervacie();
            } else {
                JOptionPane.showMessageDialog(this, "Tento spinning je plne obsadený!");
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Vyber spinning!");
        }
    }//GEN-LAST:event_kartouMenuItemMousePressed

    private void jednorazovyMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jednorazovyMenuItemMousePressed
        try {
            Spinning spinning = (Spinning) spinningComboBox.getSelectedItem();
            if (spinning.getVolne() > 0) {
                new RezervaciaForm(this, true, spinning).setVisible(true);
                zobrazRezervacie();
            } else {
                JOptionPane.showMessageDialog(this, "Tento spinning je plne obsadený!");
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Vyber spinning!");
        }    }//GEN-LAST:event_jednorazovyMenuItemMousePressed

    private void spinningComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spinningComboBoxActionPerformed
        zobrazRezervacie();
    }//GEN-LAST:event_spinningComboBoxActionPerformed

    private void odhlasZoSpinninguMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_odhlasZoSpinninguMenuMousePressed
        try {
            Long idRezervacie = (Long) rezervacieTable.getModel().getValueAt(this.rezervacieTable.getSelectedRow(), ID_COLUMN);
            
            rezervaciaDao.odstranRezervacia(idRezervacie);
            ((RezervaciaTableModel)rezervacieTable.getModel()).aktualizovat();
            
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Vyber zákazníka na odhlásenie zo spinningu.");
        }
    }//GEN-LAST:event_odhlasZoSpinninguMenuMousePressed

    private void zobrazRezervacie() {
        try {
            Spinning spinning = (Spinning) spinningComboBox.getSelectedItem();
            rezervacieTable.setModel(new RezervaciaTableModel(spinning));
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Vyber spinning!");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpinningForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpinningForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpinningForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpinningForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SpinningForm dialog = new SpinningForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jednorazovyMenuItem;
    private javax.swing.JMenuItem kartouMenuItem;
    private javax.swing.JMenu odhlasZoSpinninguMenu;
    private javax.swing.JMenu pridajInstruktoraMenu;
    private javax.swing.JMenu pridajSpinningMenu;
    private javax.swing.JScrollPane rezervacieScrollPane;
    private javax.swing.JTable rezervacieTable;
    private javax.swing.JMenu rezervujMenu;
    private javax.swing.JComboBox<Spinning> spinningComboBox;
    private javax.swing.JLabel spinningLabel;
    private javax.swing.JMenuBar spinningMenuBar;
    // End of variables declaration//GEN-END:variables
}
