package sk.upjs.ics.paz1c.fitnesscentrum.form;

import java.time.LocalDateTime;
import javax.swing.JOptionPane;
import sk.upjs.ics.paz1c.fitnesscentrum.ObjectFactory;
import sk.upjs.ics.paz1c.fitnesscentrum.entity.Cvicenie;
import sk.upjs.ics.paz1c.fitnesscentrum.manager.SpinningManager;
import sk.upjs.ics.paz1c.fitnesscentrum.model.CvicenieTableModel;
import sk.upjs.ics.paz1c.fitnesscentrum.entity.Spinning;
import sk.upjs.ics.paz1c.fitnesscentrum.manager.CvicenieManager;

public class ZrusitCvicenieForm extends javax.swing.JDialog {

    private static final int ID_COLUMN = 4;
    private final CvicenieManager cvicenieManager = ObjectFactory.INSTANCE.getCvicenieManager();
    private Cvicenie cvicenie;

    /**
     * Creates new form ZrusSpinningForm
     *
     * @param parent
     * @param modal
     */
    public ZrusitCvicenieForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public ZrusitCvicenieForm() {
        super(new javax.swing.JFrame(), true);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        zoznamSpinningovScrollPane = new javax.swing.JScrollPane();
        zoznamSpinningovTable = new javax.swing.JTable();
        zrusitSpinningButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Zrušiť spinning");
        setResizable(false);

        zoznamSpinningovTable.setModel(new sk.upjs.ics.paz1c.fitnesscentrum.model.CvicenieTableModel());
        zoznamSpinningovScrollPane.setViewportView(zoznamSpinningovTable);

        zrusitSpinningButton.setText("Zrušiť cvičenie");
        zrusitSpinningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zrusitSpinningButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(389, Short.MAX_VALUE)
                .addComponent(zrusitSpinningButton)
                .addContainerGap())
            .addComponent(zoznamSpinningovScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(zoznamSpinningovScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(zrusitSpinningButton)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void zrusitSpinningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zrusitSpinningButtonActionPerformed
        try {
            Long idCvicenia = (Long) zoznamSpinningovTable.getModel()
                    .getValueAt(this.zoznamSpinningovTable.getSelectedRow(), ID_COLUMN);
            cvicenie = cvicenieManager.dajCvicenieSId(idCvicenia);
            if ((cvicenie.getKapacita() == cvicenie.getVolne()) || (cvicenie.getDatum().isBefore(LocalDateTime.now()))) {
                Object[] options = {"Zmazať", "Zrušiť"};
                if (JOptionPane.showOptionDialog(this, "Naozaj chcete zmazať cvičenie s instruktorom "
                        + cvicenie.getInstruktor() + ", ktorý sa má uskutočniť dňa "
                        + cvicenie.getDatum().toLocalDate() + " o "
                        + cvicenie.getDatum().toLocalTime() + "?",
                        "Zmazať cvičenie", JOptionPane.DEFAULT_OPTION,
                        JOptionPane.PLAIN_MESSAGE, null, options, options[0]) == JOptionPane.YES_OPTION) {

                    cvicenieManager.vymazCvicenie(cvicenie);
                    JOptionPane.showMessageDialog(this, "Cvičenie s instruktorom "
                            + cvicenie.getInstruktor() + " z dňa " + cvicenie.getDatum() + " bol zrušený!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Nemožno vymazať cvičenie, na ktoré sú rezervácie! "
                        + "Najprv musíte zrušiť rezervácie!");
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Nie je vybraté žiadne cvičenie!");
        }
        aktualizovatZoznamCviceniTable();
    }//GEN-LAST:event_zrusitSpinningButtonActionPerformed

    private void aktualizovatZoznamCviceniTable() {
        CvicenieTableModel model = (CvicenieTableModel) zoznamSpinningovTable.getModel();
        model.aktualizovat();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane zoznamSpinningovScrollPane;
    private javax.swing.JTable zoznamSpinningovTable;
    private javax.swing.JButton zrusitSpinningButton;
    // End of variables declaration//GEN-END:variables
}
