package sk.upjs.ics.paz1c.fitnesscentrum.form;

import javax.swing.JOptionPane;
import sk.upjs.ics.paz1c.fitnesscentrum.DaoFactory;
import sk.upjs.ics.paz1c.fitnesscentrum.ZakaznikTableModel;
import sk.upjs.ics.paz1c.fitnesscentrum.dao.ZakaznikDao;
import sk.upjs.ics.paz1c.fitnesscentrum.entity.Zakaznik;

public final class ZoznamForm extends javax.swing.JFrame {

    private static HlavneOknoForm hlavneOkno;
    private ZakaznikDao zakaznikDao;
    private static final int ID_COLUMN = 0;

    /**
     * Creates new form ZoznamForm
     *
     * @param hlavneOkno
     */
    public ZoznamForm(HlavneOknoForm hlavneOkno) {
        zakaznikDao = DaoFactory.INSTANCE.getZakaznikDao();
        ZoznamForm.hlavneOkno = hlavneOkno;
        hlavneOkno.setEnabled(false);
        initComponents();
        aktualizovatZoznamZakaznikov();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        zoznamZakaznikovScrollPane = new javax.swing.JScrollPane();
        zoznamZakaznikovTable = new javax.swing.JTable();
        zmazButton = new javax.swing.JButton();
        hladajPodlaMenaLabel = new javax.swing.JLabel();
        hladajPodlaMenaTextField = new javax.swing.JTextField();
        hladajButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Zoznam Zákazníkov");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        zoznamZakaznikovTable.setModel(new ZakaznikTableModel(""));
        zoznamZakaznikovScrollPane.setViewportView(zoznamZakaznikovTable);

        zmazButton.setText("Zmaž");
        zmazButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zmazButtonActionPerformed(evt);
            }
        });

        hladajPodlaMenaLabel.setText("Hľadaj podľa mena: ");

        hladajButton.setText("Hľadaj");
        hladajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hladajButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hladajPodlaMenaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hladajPodlaMenaTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hladajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zmazButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(zoznamZakaznikovScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hladajPodlaMenaLabel)
                            .addComponent(hladajButton)
                            .addComponent(zmazButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(hladajPodlaMenaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addComponent(zoznamZakaznikovScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        hlavneOkno.aktualizovatZoznamPritomnych();
        hlavneOkno.setEnabled(true);
    }//GEN-LAST:event_formWindowClosed

    private void zmazButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zmazButtonActionPerformed
        try {
            Long idZakaznika = (Long) zoznamZakaznikovTable.getValueAt(this.zoznamZakaznikovTable.getSelectedRow(), ID_COLUMN);
            Zakaznik zakaznik = zakaznikDao.dajZakaznikaSId(idZakaznika);
            if (!zakaznik.isPritomny()) {
                new ZmazatZakaznikaForm(this, true, zakaznik).setVisible(true);
                aktualizovatZoznamZakaznikov();
            } else {
                JOptionPane.showMessageDialog(this, "Nemožno vymazať prítomného zákazníka!");
            }
        } catch (Exception e) {
            System.err.println("Vyber zákazníka na zmazanie.");
        }
    }//GEN-LAST:event_zmazButtonActionPerformed

    private void hladajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hladajButtonActionPerformed
        System.out.println(hladajPodlaMenaTextField.getText());
        zoznamZakaznikovTable.setModel(new ZakaznikTableModel(hladajPodlaMenaTextField.getText()));
        aktualizovatZoznamZakaznikov();
    }//GEN-LAST:event_hladajButtonActionPerformed

    public void aktualizovatZoznamZakaznikov() {
        ZakaznikTableModel model = (ZakaznikTableModel) zoznamZakaznikovTable.getModel();
        model.aktualizovat();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ZoznamForm(hlavneOkno).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hladajButton;
    private javax.swing.JLabel hladajPodlaMenaLabel;
    private javax.swing.JTextField hladajPodlaMenaTextField;
    private javax.swing.JButton zmazButton;
    private javax.swing.JScrollPane zoznamZakaznikovScrollPane;
    private javax.swing.JTable zoznamZakaznikovTable;
    // End of variables declaration//GEN-END:variables
}
